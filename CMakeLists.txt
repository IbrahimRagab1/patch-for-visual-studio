
CMAKE_MINIMUM_REQUIRED( VERSION 2.6.4 )

PROJECT( Patch )

INCLUDE (CheckIncludeFiles)
# usage: CHECK_INCLUDE_FILES (<header> <RESULT_VARIABLE> )

CHECK_INCLUDE_FILES(malloc.h HAVE_MALLOC_H)
CHECK_INCLUDE_FILES("sys/param.h;sys/mount.h" HAVE_SYS_MOUNT_H)
CHECK_INCLUDE_FILES(bp-sym.h HAVE_BP_SYM_H)
CHECK_INCLUDE_FILES(fcntl.h HAVE_FCNTL_H)
CHECK_INCLUDE_FILES(inttypes.h HAVE_INTTYPES_H)
CHECK_INCLUDE_FILES(limits.h HAVE_LIMITS_H)
CHECK_INCLUDE_FILES(memory.h HAVE_MEMORY_H)
CHECK_INCLUDE_FILES(stddef.h HAVE_STDDEF_H)
CHECK_INCLUDE_FILES(stdint.h HAVE_STDINT_H)
CHECK_INCLUDE_FILES(stdlib.h HAVE_STDLIB_H)
CHECK_INCLUDE_FILES(strings.h HAVE_STRINGS_H)
CHECK_INCLUDE_FILES(string.h HAVE_STRING_H)
CHECK_INCLUDE_FILES(stdbool.h HAVE_STDBOOL_H)
CHECK_INCLUDE_FILES(sys/stat.h HAVE_SYS_STAT_H)
CHECK_INCLUDE_FILES(sys/time.h HAVE_SYS_TIME_H)
CHECK_INCLUDE_FILES(sys/types.h HAVE_SYS_TYPES_H)
CHECK_INCLUDE_FILES(unistd.h HAVE_UNISTD_H)
CHECK_INCLUDE_FILES(utime.h HAVE_UTIME_H)
CHECK_INCLUDE_FILES(sys/utime.h HAVE_SYS_UTIME_H)
CHECK_INCLUDE_FILES(varargs.h HAVE_VARARGS_H)
CHECK_INCLUDE_FILES(wchar.h HAVE_WCHAR_H)
CHECK_INCLUDE_FILES(wctype.h HAVE_WCTYPE_H)
CHECK_INCLUDE_FILES("sys/time.h;time.h" TIME_WITH_SYS_TIME)
INCLUDE( CheckStructHasMember )
CHECK_STRUCT_HAS_MEMBER( dirent d_ino dirent.h D_INO_IN_DIRENT )
INCLUDE (CheckSymbolExists)
CHECK_SYMBOL_EXISTS(clearerr_unlocked stdio.h HAVE_DECL_CLEARERR_UNLOCKED)
CHECK_SYMBOL_EXISTS(feof_unlocked stdio.h HAVE_DECL_FEOF_UNLOCKED)
CHECK_SYMBOL_EXISTS(fflush_unlocked stdio.h HAVE_DECL_FFLUSH_UNLOCKED)
CHECK_SYMBOL_EXISTS(fgets_unlocked stdio.h HAVE_DECL_FGETS_UNLOCKED)
CHECK_SYMBOL_EXISTS(fputc_unlocked stdio.h HAVE_DECL_FPUTC_UNLOCKED)
CHECK_SYMBOL_EXISTS(fputs_unlocked stdio.h HAVE_DECL_FPUTS_UNLOCKED)
CHECK_SYMBOL_EXISTS(fread_unlocked stdio.h HAVE_DECL_FREAD_UNLOCKED)
CHECK_SYMBOL_EXISTS(free stdio.h HAVE_DECL_FREE)
SET(HAVE_DECL_FREE TRUE)
CHECK_SYMBOL_EXISTS(fwrite_unlocked stdio.h HAVE_DECL_FWRITE_UNLOCKED)
CHECK_SYMBOL_EXISTS(getchar_unlocked stdio.h HAVE_DECL_GETCHAR_UNLOCKED)
CHECK_SYMBOL_EXISTS(getc_unlocked stdio.h HAVE_DECL_GETC_UNLOCKED)
CHECK_SYMBOL_EXISTS(getenv "stdlib.h;stdio.h" HAVE_DECL_GETENV_)
CHECK_SYMBOL_EXISTS(mktemp stdio.h HAVE_DECL_MKTEMP)
CHECK_SYMBOL_EXISTS(putchar_unlocked stdio.h HAVE_DECL_PUTCHAR_UNLOCKED)
CHECK_SYMBOL_EXISTS(putc_unlocked stdio.h HAVE_DECL_PUTC_UNLOCKED)
CHECK_SYMBOL_EXISTS(strerror stdio.h HAVE_DECL_STRERROR)
CHECK_SYMBOL_EXISTS(strerror_r stdio.h HAVE_DECL_STRERROR_R)
CHECK_SYMBOL_EXISTS(DIR dirent.h HAVE_DIRENT_H)
CHECK_SYMBOL_EXISTS(DIR ndir.h HAVE_NDIR_H)
CHECK_SYMBOL_EXISTS(DIR sys/dir.h HAVE_SYS_DIR_H)
CHECK_SYMBOL_EXISTS(DIR sys/ndir.h HAVE_SYS_NDIR_H)
CHECK_SYMBOL_EXISTS(vprintf stdio.h HAVE_VPRINTF)
IF(NOT HAVE_VPRINTF)
	MESSAGE(STATUS "Not checking for _doprnt")
ENDIF()
CHECK_SYMBOL_EXISTS(fseeko stdio.h HAVE_FSEEKO)
CHECK_SYMBOL_EXISTS(geteuid stdio.h HAVE_GETEUID)
CHECK_SYMBOL_EXISTS(getuid stdio.h HAVE_GETUID)
CHECK_SYMBOL_EXISTS(isascii stdio.h HAVE_ISASCII)
CHECK_SYMBOL_EXISTS(iswprint ctype.h HAVE_ISWPRINT)
CHECK_SYMBOL_EXISTS(malloc stdlib.h HAVE_DECL_MALLOC)
CHECK_SYMBOL_EXISTS(malloc stdlib.h HAVE_MALLOC)
SET(HAVE_DECL_MALLOC TRUE)
SET(HAVE_MALLOC TRUE)
CHECK_SYMBOL_EXISTS(raise signal.h HAVE_RAISE)
CHECK_SYMBOL_EXISTS(memchr memory.h HAVE_MEMCHR)
CHECK_SYMBOL_EXISTS(strerror string.h HAVE_MEMCMP)
CHECK_SYMBOL_EXISTS(strerror_r string.h HAVE_MEMCMP)
CHECK_SYMBOL_EXISTS(strncasecmp string.h HAVE_MEMCMP)
IF(HAVE_UTIME_H)
	CHECK_SYMBOL_EXISTS(utimbuf utime.h HAVE_STRUCT_UTIMBUF)
ENDIF()
IF(HAVE_SYS_UTIME_H)
	CHECK_SYMBOL_EXISTS("struct utimbuf" sys/utime.h HAVE_STRUCT_UTIMBUF)
	SET(HAVE_STRUCT_UTIMBUF TRUE)
ENDIF()
CHECK_SYMBOL_EXISTS(vprintf stdio.h HAVE_VPRINTF)
CHECK_SYMBOL_EXISTS(mbstate_t wchar.h HAVE_MBSTATE_T)
SET(HAVE_MBSTATE_T TRUE)
IF(HAVE_MBSTATE_T)
	CHECK_SYMBOL_EXISTS(mbrtowc wchar.h HAVE_MBRTOWC)
ELSE()
	MESSAGE(STATUS "Not defining mbstate_t")
ENDIF()
CHECK_SYMBOL_EXISTS(_Bool stdlib.h HAVE__BOOL)
IF(HAVE__BOOL)
	SET(HAVE__BOOL 1)
ELSE()
	SET(HAVE__BOOL 0)
ENDIF()
CHECK_SYMBOL_EXISTS(mode_t "sys/types.h" HAVE_MODE_T)
#SET(HAVE_MODE_T TRUE)
IF(NOT HAVE_MODE_T)
	SET(mode_t int)
ENDIF()
CHECK_SYMBOL_EXISTS(off_t "sys/types.h" HAVE_OFF_T)
SET(HAVE_OFF_T TRUE)
IF(NOT HAVE_OFF_T)
	SET(off_t long)
ENDIF()
CHECK_SYMBOL_EXISTS(pid_t "sys/types.h" HAVE_PID_T)
SET(HAVE_PID_T TRUE)
IF(NOT HAVE_PID_T)
	SET(pid_t int)
ENDIF()
CHECK_SYMBOL_EXISTS(size_t "stddef.h" HAVE_SIZE_T_)
SET(HAVE_SIZE_T TRUE)
IF(NOT HAVE_SIZE_T)
	SET(size_t unsigned int)
ENDIF()

SET(PACKAGE_BUGREPORT "\"no-one cares\"")
SET(ed_PROGRAM "\"notepad++\"")
SET(RETSIGTYPE int)
SET(PACKAGE_NAME "\"patch\"")
SET(PACKAGE_VERSION "\"2.9.7\"")

SET(FILESYSTEM_BACKSLASH_IS_FILE_NAME_SEPARATOR FALSE)
SET(MKDIR_TAKES_ONE_ARG TRUE)
SET(STDC_HEADERS TRUE)
SET(HAVE_SETMODE_DOS TRUE)

CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/config.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/config.h)
IF(NOT HAVE_STDBOOL_H)
	CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/stdbool.h.in ${CMAKE_CURRENT_BINARY_DIR}/stdbool.h)
ENDIF()

SET(LIB_SRCS error.c hash.c memchr.c strcasecmp.c strncasecmp.c)
SET(LIB_HDRS error.h hash.h ${CMAKE_CURRENT_BINARY_DIR}/config.h ${CMAKE_CURRENT_BINARY_DIR}/stdbool.h)
SET(EXE_SRCS addext.c argmatch.c backupfile.c basename.c dirname.c getopt.c getopt1.c inp.c maketime.c nonposix.c partime.c patch.c pch.c quote.c quotearg.c quotesys.c util.c version.c)
SET(EXE_HDRS argmatch.h backupfile.h common.h dirname.h getopt.h gettext.h inp.h maketime.h nonposix.h partime.h pch.h quote.h quotearg.h quotesys.h resource/patch-res.rc unlocked-io.h util.h version.h)

ADD_DEFINITIONS(-DHAVE_CONFIG_H -D_CRT_SECURE_NO_WARNINGS)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR})
ADD_EXECUTABLE(patch ${EXE_SRCS} ${EXE_HDRS} ${LIB_SRCS} ${LIB_HDRS})
INSTALL(TARGETS patch RUNTIME DESTINATION "C:/gnututils/bin")


